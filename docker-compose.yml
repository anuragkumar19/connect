# backend, caddy, pg, nats, minio, prometheus, grafana, grfana/loki, grafana/tempo
services:
  connect-server:
    depends_on:
      pg:
        condition: service_healthy
      pg-migrate:
        condition: service_completed_successfully
    build:
      context: ./
      target: build-release-stage
    environment:
      POSTGRES_URI: postgresql://postgres:postgres@pg:5432/postgres
      # nats:
    #   condition: service_healthy
    # minio:
    #   condition: service_healthy
    develop:
      watch:
        - path: ./go.mod, ./go.sum, ./**/*.go
          action: rebuild
  pg:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  pg-migrate:
    depends_on:
      pg:
        condition: service_healthy
    build:
      context: ./
      target: db-migration
    environment:
      POSTGRES_URI: postgresql://postgres:postgres@pg:5432/postgres
    develop:
      watch:
        - path: database/sql/schema
          action: sync+restart
          target: /app/database/sql/schema
volumes:
  pgdata:
