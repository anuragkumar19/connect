version: "3"
output: prefixed
interval: 0s
dotenv: [".env"]
vars:
  PWD:
    sh: "pwd"
  CONNECT_SERVER_BUILD_BIN: '{{joinPath .PWD "bin/connect-server" | toSlash}}{{exeExt}}'
  CONNECT_SERVER_DEV_BIN: '{{joinPath .PWD "tmp/connect-server" | toSlash}}{{exeExt}}'
  BUF_BIN: '{{joinPath .PWD "tools/bin/buf" | toSlash}}{{exeExt}}'
  GOVULNCHECK_BIN: '{{joinPath .PWD "tools/bin/govulncheck" | toSlash}}{{exeExt}}'
  GOLANG_CI_LINT_BIN: '{{joinPath .PWD "tools/bin/golang-ci-lint" | toSlash}}{{exeExt}}'
  YAML_FMT_BIN: '{{joinPath .PWD "tools/bin/yamlfmt" | toSlash}}{{exeExt}}'
  GOOSE_BIN: '{{joinPath .PWD "tools/bin/goose" | toSlash}}{{exeExt}}'
  SQLC_BIN: '{{joinPath .PWD "tools/bin/sqlc" | toSlash}}{{exeExt}}'
tasks:
  setup:
    dir: "tools"
    cmds:
      - go mod download
      - go build -o {{shellQuote .BUF_BIN}} github.com/bufbuild/buf/cmd/buf
      - go build -o {{shellQuote .GOLANG_CI_LINT_BIN}} github.com/golangci/golangci-lint/cmd/golangci-lint
      - go build -o {{shellQuote .GOVULNCHECK_BIN}} golang.org/x/vuln/cmd/govulncheck
      - go build -o {{shellQuote .YAML_FMT_BIN}} github.com/google/yamlfmt/cmd/yamlfmt
      - go build -o {{shellQuote .GOOSE_BIN}} github.com/pressly/goose/v3/cmd/goose
      - go build -o {{shellQuote .SQLC_BIN}} github.com/sqlc-dev/sqlc/cmd/sqlc
  build-go:
    cmds:
      - 'go build -o {{shellQuote .CONNECT_SERVER_BUILD_BIN}} -ldflags="{{.LINKER_FLAG}}" ./cmd/connect-server'
      - "echo 'Successfully build: {{.CONNECT_SERVER_BUILD_BIN}}'"
    vars:
      NOW: '{{now | date "2006-01-02T15:04:05Z07:00"}}'
      COMMIT_HASH_RAW:
        sh: "git log -n 1 --format=%h"
      COMMIT_HASH: "{{trim .COMMIT_HASH_RAW}}"
      VERSION_RAW:
        sh: "git describe --tags --abbrev=0"
      VERSION: "{{trim .VERSION_RAW}}"
      BRANCH_RAW:
        sh: "git rev-parse --abbrev-ref HEAD"
      BRANCH: "{{trim .BRANCH_RAW}}"
      LINKER_FLAG: "-s -X main.version={{shellQuote .VERSION}} -X main.commit={{shellQuote .COMMIT_HASH}} -X main.buildBranch={{shellQuote .BRANCH}} -X main.buildStampRFC3339={{shellQuote .NOW}}"
  dev-build-go:
    cmds:
      - "go build -o {{shellQuote .CONNECT_SERVER_DEV_BIN}} ./cmd/connect-server"
      - "echo 'Successfully build: {{.CONNECT_SERVER_DEV_BIN}}'"
    sources:
      - go.mod
      - go.sum
      - "**/*.go"
    generates:
      - "{{.CONNECT_SERVER_DEV_BIN}}"
  dev-run-go:
    deps:
      - dev-build-go
    cmds:
      - "{{.CONNECT_SERVER_DEV_BIN}}"
  fmt-protobuf:
    cmds:
      - "{{.BUF_BIN}} format -w"
  fmt-yaml:
    cmds:
      - "{{.YAML_FMT_BIN}} ."
  fmt-go:
    - "go fmt ./..."
  fmt:
    cmds:
      - task: fmt-yaml
      - task: fmt-protobuf
      - task: fmt-go
  lint-go-std:
    cmds:
      - "go vet ./..."
  lint-go-ci:
    cmds:
      - "{{.GOLANG_CI_LINT_BIN}} run"
  lint-go:
    cmds:
      - task: lint-go-std
      - task: lint-go-ci
  lint-protobuf:
    cmds:
      - "{{.BUF_BIN}} lint"
  lint-sql:
    - "{{.SQLC_BIN}} vet"
  lint:
    cmds:
      - task: lint-go
      - task: lint-protobuf
      - task: lint-sql
  generate-sql:
    cmds:
      - "{{.SQLC_BIN}} generate"
    sources:
      - sqlc.yaml
      - database/sql/**/*.sql
    generates:
      - database/*.go
  generate-protobuf:
    cmds:
      - "{{.BUF_BIN}} generate"
    sources:
      - buf.yaml
      - buf.gen.yaml
      - api/proto/**/*
    generates:
      - api/gen/**/*.go
  generate:
    cmds:
      - task: generate-sql
      - task: generate-protobuf
  migrate:
    env:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "{{.POSTGRES_URI}}"
      GOOSE_MIGRATION_DIR: database/sql/schema
    cmds:
      - "{{.GOOSE_BIN}} {{.CLI_ARGS}}"
    requires:
      vars:
        - POSTGRES_URI
  now:
    cmds:
      - echo {{now | date "2006-01-02T15:04:05Z07:00"}}
  go-vuln-check:
    cmds:
      - "{{.GOVULNCHECK_BIN}} ./..."
